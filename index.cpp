#include <aWOT.h>

P(index) = "<html><head> <title>Lighting Control System</title> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <style> button { display: block; width: 100%; margin: 15px 0; padding: 15px; border-style: solid; background-color: bisque; cursor: pointer; font-size: larger; font-weight: bolder; } button.all { display: inline-block; width: 45%; } button.on { background-color: #8bc34a; float: right; } button.off { background-color: #ff9800; margin-right: 15px; } button.active { background-color: darkturquoise; } button.error { background-color: red; } .errors { color: red; font-size: large; } </style></head><body> <h1>Lighting Control System</h1> <div id=\"errors\" class=\"errors\"></div> <div id=\"content\"> <hr> <button class=\"all off\" onclick=\"processAll(this, 0)\">all off</button> <button class=\"all on\" onclick=\"processAll(this, 1)\">all on</button> <hr> </div> <script> (() => { const content = document.getElementById(\"content\"); const errorPlaceholder = document.getElementById(\"errors\"); const baseUrl = \"/api\"; function errorHandler(reason) { const error = document.createElement(\"p\"); error.textContent = reason; errorPlaceholder.appendChild(error); }; window.processAll = function (el, state) { fetch(`${baseUrl}/button/all/${state}`, { method: 'POST' }) .then((response) => { const buttons = document.getElementsByTagName(\"button\"); for (let i = 0; i < buttons.length; i++) { const b = buttons[i]; if (/^button[0-9]+$/.test(b.id)) { state ? b.classList.add(\"active\") : b.classList.remove(\"active\"); } } }) .catch(errorHandler); }; fetch(`${baseUrl}/info`) .then((response) => response.json()) .then((data) => { window._data = data; window._data.buttons.forEach(element => { const button = document.createElement(\"button\"); button.id = `button${element.id}`; button.textContent = element.label; if (element.state) { button.classList.add(\"active\"); } else { button.classList.remove(\"active\"); } button.onclick = function () { const el = this; const state = el.classList.toggle(\"active\") - 0; fetch(`${baseUrl}/button/${element.id}/${state}`, { method: 'POST' }) .catch((reason) => { el.classList.toggle(\"active\"); el.classList.toggle(\"error\"); const p = document.createElement('p'); p.textContent = reason; errorPlaceholder.appendChild(p); }); }; content.appendChild(button); }); }) .catch(errorHandler); })(); </script></body></html>";